name: Accessibility Tests
on:
  push:
    branches: [ main, master, develop, 'feature/*', 'bugfix/*' ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  accessibility:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
    
    services:
      wordpress:
        image: wordpress:latest
        env:
          WORDPRESS_DB_HOST: mysql
          WORDPRESS_DB_USER: root
          WORDPRESS_DB_PASSWORD: root
          WORDPRESS_DB_NAME: wordpress_test
        ports:
          - 8080:80
      
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: wordpress_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 'lts/*'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright
      run: npx playwright install --with-deps ${{ matrix.browser }}

    - name: Wait for WordPress
      run: |
        timeout 300 bash -c 'until curl -s http://localhost:8080 > /dev/null; do sleep 5; done'

    - name: Setup WordPress for testing
      run: |
        # Install WP-CLI
        curl -O https://raw.githubusercontent.com/wp-cli/wp-cli/v2.8.1/utils/wp-cli-runner.phar
        chmod +x wp-cli-runner.phar
        mv wp-cli-runner.phar /usr/local/bin/wp
        
        # Configure WordPress
        wp core install --path=/var/www/html --url=http://localhost:8080 --title="Test Site" --admin_user=admin --admin_password=admin --admin_email=test@example.com --allow-root
        
        # Copy theme to WordPress
        cp -r . /var/www/html/wp-content/themes/kiwi-theme/
        wp theme activate kiwi-theme --allow-root --path=/var/www/html

    - name: Run Accessibility Tests
      run: npx playwright test --project=${{ matrix.browser }} --config=tests/accessibility/playwright.config.js

    - name: Generate Accessibility Report
      if: failure()
      run: |
        npx playwright show-report tests/accessibility/tests/reports/accessibility --port=9323 &
        sleep 5
        curl -s http://localhost:9323 > accessibility-report-${{ matrix.browser }}.html

    - name: Upload Accessibility Reports
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: accessibility-report-${{ matrix.browser }}
        path: |
          tests/accessibility/tests/reports/
          accessibility-report-${{ matrix.browser }}.html
        retention-days: 30

    - name: Pa11y Scan
      if: matrix.browser == 'chromium'
      run: |
        npm install -g pa11y
        pa11y http://localhost:8080 --standard WCAG2AA --reporter cli
        pa11y http://localhost:8080/sample-page --standard WCAG2AA --reporter cli

    - name: Lighthouse Accessibility Audit
      if: matrix.browser == 'chromium'
      run: |
        npm install -g @lhci/cli
        lhci autorun --collect.url=http://localhost:8080 --assert.preset=lighthouse:accessibility --upload.target=temporary-public-storage